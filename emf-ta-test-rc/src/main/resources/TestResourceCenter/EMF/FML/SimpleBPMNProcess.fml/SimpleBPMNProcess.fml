use org.openflexo.technologyadapter.emf.EMFModelSlot as EMF;

import org.openflexo.technologyadapter.emf.model.EMFModel;

import ["http://www.omg.org/spec/BPMN/20100524/MODEL-XMI"] as BPMN;
import [BPMN:"Process"] as PROCESS;
import [BPMN:"Task"] as TASK;

typedef EMFObjectIndividualType(eClass=PROCESS) as Process;
typedef EMFObjectIndividualType(eClass=TASK) as Task;

@URI("http://www.openflexo.org/test/emf/SimpleBPMNProcess.fml")
public model SimpleBPMNProcess {
	EMFModel process with EMFModelSlot(metaModel=BPMN);

	create(Resource<EMFModel> aProcessResource) {
		process = parameters.aProcessResource.resourceData;
		log "Process: " + process;
	}

	public List<EMFObjectIndividual> listAllEMFIndividuals() {
		List<EMFObjectIndividual> returned = new ArrayList();
		for (EMFObjectIndividual anObject : select EMFObjectIndividual from process) {
			log "EMFObjectIndividual: " + anObject;
			returned.add(anObject);
		}
		return returned;
	}

	public List<Process> listAllProcesses() {
		List<Process> returned = new ArrayList();
		for (Process aProcess : select Process from process) {
			log "Process: " + aProcess;
			returned.add(aProcess);
		}
		return returned;
	}

	public List<Task> listAllTasks() {
		List<Task> returned = new ArrayList();
		for (Task aTask : select Task from process) {
			log "Task: " + aTask;
			returned.add(aTask);
		}
		return returned;
	}

}
